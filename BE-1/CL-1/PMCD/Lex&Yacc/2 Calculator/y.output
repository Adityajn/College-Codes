   0  $accept : s $end

   1  s : exp

   2  exp : exp '+' exp
   3      | exp '-' exp
   4      | exp '*' exp
   5      | exp '/' exp
   6      | exp '^' exp
   7      | SINE '(' exp ')'
   8      | COSINE '(' exp ')'
   9      | TAN '(' exp ')'
  10      | LOG '(' exp ')'
  11      | SQRT '(' exp ')'
  12      | NUM
  13      | '(' exp ')'

state 0
	$accept : . s $end  (0)

	NUM  shift 1
	SINE  shift 2
	COSINE  shift 3
	TAN  shift 4
	SQRT  shift 5
	LOG  shift 6
	'('  shift 7
	.  error

	s  goto 8
	exp  goto 9


state 1
	exp : NUM .  (12)

	.  reduce 12


state 2
	exp : SINE . '(' exp ')'  (7)

	'('  shift 10
	.  error


state 3
	exp : COSINE . '(' exp ')'  (8)

	'('  shift 11
	.  error


state 4
	exp : TAN . '(' exp ')'  (9)

	'('  shift 12
	.  error


state 5
	exp : SQRT . '(' exp ')'  (11)

	'('  shift 13
	.  error


state 6
	exp : LOG . '(' exp ')'  (10)

	'('  shift 14
	.  error


state 7
	exp : '(' . exp ')'  (13)

	NUM  shift 1
	SINE  shift 2
	COSINE  shift 3
	TAN  shift 4
	SQRT  shift 5
	LOG  shift 6
	'('  shift 7
	.  error

	exp  goto 15


state 8
	$accept : s . $end  (0)

	$end  accept


state 9
	s : exp .  (1)
	exp : exp . '+' exp  (2)
	exp : exp . '-' exp  (3)
	exp : exp . '*' exp  (4)
	exp : exp . '/' exp  (5)
	exp : exp . '^' exp  (6)

	'+'  shift 16
	'-'  shift 17
	'*'  shift 18
	'/'  shift 19
	'^'  shift 20
	$end  reduce 1


state 10
	exp : SINE '(' . exp ')'  (7)

	NUM  shift 1
	SINE  shift 2
	COSINE  shift 3
	TAN  shift 4
	SQRT  shift 5
	LOG  shift 6
	'('  shift 7
	.  error

	exp  goto 21


state 11
	exp : COSINE '(' . exp ')'  (8)

	NUM  shift 1
	SINE  shift 2
	COSINE  shift 3
	TAN  shift 4
	SQRT  shift 5
	LOG  shift 6
	'('  shift 7
	.  error

	exp  goto 22


state 12
	exp : TAN '(' . exp ')'  (9)

	NUM  shift 1
	SINE  shift 2
	COSINE  shift 3
	TAN  shift 4
	SQRT  shift 5
	LOG  shift 6
	'('  shift 7
	.  error

	exp  goto 23


state 13
	exp : SQRT '(' . exp ')'  (11)

	NUM  shift 1
	SINE  shift 2
	COSINE  shift 3
	TAN  shift 4
	SQRT  shift 5
	LOG  shift 6
	'('  shift 7
	.  error

	exp  goto 24


state 14
	exp : LOG '(' . exp ')'  (10)

	NUM  shift 1
	SINE  shift 2
	COSINE  shift 3
	TAN  shift 4
	SQRT  shift 5
	LOG  shift 6
	'('  shift 7
	.  error

	exp  goto 25


state 15
	exp : exp . '+' exp  (2)
	exp : exp . '-' exp  (3)
	exp : exp . '*' exp  (4)
	exp : exp . '/' exp  (5)
	exp : exp . '^' exp  (6)
	exp : '(' exp . ')'  (13)

	'+'  shift 16
	'-'  shift 17
	'*'  shift 18
	'/'  shift 19
	'^'  shift 20
	')'  shift 26
	.  error


state 16
	exp : exp '+' . exp  (2)

	NUM  shift 1
	SINE  shift 2
	COSINE  shift 3
	TAN  shift 4
	SQRT  shift 5
	LOG  shift 6
	'('  shift 7
	.  error

	exp  goto 27


state 17
	exp : exp '-' . exp  (3)

	NUM  shift 1
	SINE  shift 2
	COSINE  shift 3
	TAN  shift 4
	SQRT  shift 5
	LOG  shift 6
	'('  shift 7
	.  error

	exp  goto 28


state 18
	exp : exp '*' . exp  (4)

	NUM  shift 1
	SINE  shift 2
	COSINE  shift 3
	TAN  shift 4
	SQRT  shift 5
	LOG  shift 6
	'('  shift 7
	.  error

	exp  goto 29


state 19
	exp : exp '/' . exp  (5)

	NUM  shift 1
	SINE  shift 2
	COSINE  shift 3
	TAN  shift 4
	SQRT  shift 5
	LOG  shift 6
	'('  shift 7
	.  error

	exp  goto 30


state 20
	exp : exp '^' . exp  (6)

	NUM  shift 1
	SINE  shift 2
	COSINE  shift 3
	TAN  shift 4
	SQRT  shift 5
	LOG  shift 6
	'('  shift 7
	.  error

	exp  goto 31


state 21
	exp : exp . '+' exp  (2)
	exp : exp . '-' exp  (3)
	exp : exp . '*' exp  (4)
	exp : exp . '/' exp  (5)
	exp : exp . '^' exp  (6)
	exp : SINE '(' exp . ')'  (7)

	'+'  shift 16
	'-'  shift 17
	'*'  shift 18
	'/'  shift 19
	'^'  shift 20
	')'  shift 32
	.  error


state 22
	exp : exp . '+' exp  (2)
	exp : exp . '-' exp  (3)
	exp : exp . '*' exp  (4)
	exp : exp . '/' exp  (5)
	exp : exp . '^' exp  (6)
	exp : COSINE '(' exp . ')'  (8)

	'+'  shift 16
	'-'  shift 17
	'*'  shift 18
	'/'  shift 19
	'^'  shift 20
	')'  shift 33
	.  error


state 23
	exp : exp . '+' exp  (2)
	exp : exp . '-' exp  (3)
	exp : exp . '*' exp  (4)
	exp : exp . '/' exp  (5)
	exp : exp . '^' exp  (6)
	exp : TAN '(' exp . ')'  (9)

	'+'  shift 16
	'-'  shift 17
	'*'  shift 18
	'/'  shift 19
	'^'  shift 20
	')'  shift 34
	.  error


state 24
	exp : exp . '+' exp  (2)
	exp : exp . '-' exp  (3)
	exp : exp . '*' exp  (4)
	exp : exp . '/' exp  (5)
	exp : exp . '^' exp  (6)
	exp : SQRT '(' exp . ')'  (11)

	'+'  shift 16
	'-'  shift 17
	'*'  shift 18
	'/'  shift 19
	'^'  shift 20
	')'  shift 35
	.  error


state 25
	exp : exp . '+' exp  (2)
	exp : exp . '-' exp  (3)
	exp : exp . '*' exp  (4)
	exp : exp . '/' exp  (5)
	exp : exp . '^' exp  (6)
	exp : LOG '(' exp . ')'  (10)

	'+'  shift 16
	'-'  shift 17
	'*'  shift 18
	'/'  shift 19
	'^'  shift 20
	')'  shift 36
	.  error


state 26
	exp : '(' exp ')' .  (13)

	.  reduce 13


state 27
	exp : exp . '+' exp  (2)
	exp : exp '+' exp .  (2)
	exp : exp . '-' exp  (3)
	exp : exp . '*' exp  (4)
	exp : exp . '/' exp  (5)
	exp : exp . '^' exp  (6)

	'*'  shift 18
	'/'  shift 19
	'^'  shift 20
	$end  reduce 2
	'+'  reduce 2
	'-'  reduce 2
	')'  reduce 2


state 28
	exp : exp . '+' exp  (2)
	exp : exp . '-' exp  (3)
	exp : exp '-' exp .  (3)
	exp : exp . '*' exp  (4)
	exp : exp . '/' exp  (5)
	exp : exp . '^' exp  (6)

	'*'  shift 18
	'/'  shift 19
	'^'  shift 20
	$end  reduce 3
	'+'  reduce 3
	'-'  reduce 3
	')'  reduce 3


state 29
	exp : exp . '+' exp  (2)
	exp : exp . '-' exp  (3)
	exp : exp . '*' exp  (4)
	exp : exp '*' exp .  (4)
	exp : exp . '/' exp  (5)
	exp : exp . '^' exp  (6)

	'^'  shift 20
	$end  reduce 4
	'+'  reduce 4
	'-'  reduce 4
	'*'  reduce 4
	'/'  reduce 4
	')'  reduce 4


state 30
	exp : exp . '+' exp  (2)
	exp : exp . '-' exp  (3)
	exp : exp . '*' exp  (4)
	exp : exp . '/' exp  (5)
	exp : exp '/' exp .  (5)
	exp : exp . '^' exp  (6)

	'^'  shift 20
	$end  reduce 5
	'+'  reduce 5
	'-'  reduce 5
	'*'  reduce 5
	'/'  reduce 5
	')'  reduce 5


state 31
	exp : exp . '+' exp  (2)
	exp : exp . '-' exp  (3)
	exp : exp . '*' exp  (4)
	exp : exp . '/' exp  (5)
	exp : exp . '^' exp  (6)
	exp : exp '^' exp .  (6)

	'^'  shift 20
	$end  reduce 6
	'+'  reduce 6
	'-'  reduce 6
	'*'  reduce 6
	'/'  reduce 6
	')'  reduce 6


state 32
	exp : SINE '(' exp ')' .  (7)

	.  reduce 7


state 33
	exp : COSINE '(' exp ')' .  (8)

	.  reduce 8


state 34
	exp : TAN '(' exp ')' .  (9)

	.  reduce 9


state 35
	exp : SQRT '(' exp ')' .  (11)

	.  reduce 11


state 36
	exp : LOG '(' exp ')' .  (10)

	.  reduce 10


16 terminals, 3 nonterminals
14 grammar rules, 37 states
